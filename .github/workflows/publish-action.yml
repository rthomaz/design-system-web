name: publish
run-name: ${{ github.actor }} is publishing design-system-web
on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
jobs:
  build:
    name: All Steps (Build, Test & Deploy)
    runs-on: ubuntu-latest
    env:
      VERSION: 0.0.0
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v4

      - name: Set git configuration
        run: |
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"

      # Setup .npmrc file to publish to npm
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21.5.0'
          registry-url: 'https://registry.npmjs.org'

      - name: Restore/create node_modules cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      # versioning
      - name: Apply version root
        run: yarn version --patch
      - name: Set env
        run: VERSION=`echo $(npm pkg get version) | sed -e 's/\"//g'`
      - name: echo version
        run: echo $VERSION
      - name: Apply version css
        run: yarn version --new-version $VERSION --cwd libs/css --no-git-tag-version
      # - name: Apply version icons
      #   run: yarn version --patch --cwd libs/icons
      # - name: Apply version assets
      #   run: yarn version --patch --cwd libs/assets
      # - name: Apply version angular
      #   run: yarn version --patch --cwd libs/angular
      # - name: Apply version desing-system-web-lib
      #   run: yarn version --patch --cwd libs/design-system-web-lib

      - name: Git push version
        run: git push && git push --tags
      - id: set-version
        name: Output version change
        run: npm pkg get version

      - name: Install dependencies
        run: yarn install --silent --frozen-lockfile

      - name: Building
        run: yarn build

      - name: Linting
        run: yarn lint

      - name: Prettier
        run: yarn prettier

      - name: Unit testing
        run: yarn test

      # Storybook
      - name: Building Storybook
        run: yarn build-storybook
      # - name: Testing Storybook desingn-system-web-lib
      #   run: npx nx run design-system-web-lib:test-storybook
      # yarn playwright install

      # Npm Pack
      # - name: Packing
      #   run: npm pack -w:dist/libs/design-system-web-lib --pack-destination dist/libs/design-system-web-lib

      - name: Publishing npmjs.com => design-system-web-lib
        run: npm publish dist/libs/design-system-web-lib --access public
        # run: yarn publish dist/libs/design-system-web-lib --access public --patch
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publishing npmjs.com => css
        run: npm publish dist/libs/css --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publishing npmjs.com => icons
        run: npm publish dist/libs/icons --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publishing npmjs.com => assets
        run: npm publish dist/libs/assets --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publishing npmjs.com => angular
        run: npm publish dist/libs/angular --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: nx publishing
      #   run: npx nx run design-system-web-lib:nx-release-publish --packageRoot=dist/libs/design-system-web-lib

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     body: |
      #       Changes in this Release
      #       - First Change
      #       - Second Change
      #     draft: false
      #     prerelease: false
