# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Setup .npmrc file to publish to npm
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21.5.0'
          registry-url: 'https://registry.npmjs.org'
          # cache: 'npm'
          # cache-dependency-path: package-lock.json

      - name: Restore/create node_modules cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --silent --frozen-lockfile

      # Storybook
      - name: Building Storybook desing-system-web-lib
        run: npx nx run design-system-web-lib:build-storybook

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: 'dist/storybook/design-system-web-lib'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
